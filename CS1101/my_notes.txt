Introduction to fundamental programming concepts 

Topics to study -->
	Computer Programs

	Debugging

	Errors

	Formal and natural languages

Learning Objectives: 

	Describe fundamental concepts in computer programming.
	
	Differentiate between high and low-level languages.

	Demonstrate basic debugging techniques.

	Develop simple calculations in Python.

	
Tasks:

	Read the Learning Guide and Reading Assignments

	Download and install a working Python environment 

	Particpate in the Discussion Assignment (post, comment, and rate in the Discussion Forum)

	Complete and entry in the Learning Journal

	Take the Self-quiz



A computer program is a sequence of instructions to perform a mathematical or symbolic computation.




Example: This is @ well-structured Engli$h sentence with invalid t*kens in it. This sentence all valid
tokens has, but invalid structure with.

Think of computers as good employees and you think of yourself as good managers.

There are two types of langauge: 1) Formal Langauge, 2) Natural Language

Tokens are the most basic elements of a language.

Syntax is the most basic structure of a language. The process of understanding the structure is known as parsing. 

>>> 1, 1, 2
(1, 1, 2)  --> This is a tuple.



Exercise 1.1

1. In a print statement, what happens if you leave out one of the parentheses, or both?

Answer: 

>>> print('hello world'
...
...
...)
hello world

>>> print 'hello world')
Missing parentheses in call to 'print'. Did you mean print('hello world'))?


2. If you are trying to print a string, what happens if you leave out one of the quotation marks,
or both?

Answer: 

>>> print('hello world)
SyntaxError: EOL while scanning string literal


>>> print(hello world')
SyntaxError: invalid syntax


3. You can use a minus sign to make a negative number like -2. What happens if you put a plus
sign before a number? What about 2++2?

>>> +2
2

>>> +-2
-2

>>> ++2

>>> 2++2
4

4. In math notation, leading zeros are ok, as in 02. What happens if you try this in Python?

>>> 02
SyntaxError: invalid token

5. What happens if you have two values with no operator between them?

>>> 2 6
SyntaxError: invalid token

>>> '2' '6'
'26'



0x --> Hexadecimal
0b --> Binary
0o --> 

42 * 60 + 42


Week 2:

Syntax Error
Runtime error
Semantic Error

signal to noise ratio

ratio = signal_power / noise_power
decibels = 10 * math.log10(ratio)

radians = degrees / 180 * math.pi


Expression is a combination of values, variables, and operators. 

Python interactive mode
Python Script mode

PEDMAS

evaluate an expression

avoid having a variable and a function with the same name.


NameError: name 'repeat_lyrics' is not defined

Follow the flow of execution


Inside a function, the functions arguments are assigned to variables called parameters. Here is a definition for 


def function_that_prints():
    print "I printed"

def function_that_returns():
    return "I returned"

f1 = function_that_prints()
f2 = function_that_returns()
print "Now let us see what the values of f1 and f2 are"
print f1
print f2


print print_twice('akif')
akif
akif
None # I do not know the answer to why it prints None


A parameter is the variable listed inside the parentheses in the function definition

An argument is the value that are sent to the function when it is called.

line1 ---> 'Ning tiddle'
line2 ---> 'tiddle bang'

draw a stack diagram

Traceback is a stack diagram.
The order of the frames in the stack diagrams is the same as the order of the frames.

Fruitful functions and void functions

Store fruitful functions.

Void functions returns nothing.
When you have eliminated the impossible, whatever remains, however improbale, must be the truth." (A. Conan Doyle, The Sign of Four)

*Need to work on Excercise 3.1, 3.2, and * 3.3
